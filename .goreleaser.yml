# This is an example .goreleaser.yml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
builds:

  -
    id: protoc-gen-cobra

    # Path to project's (sub)directory containing Go code.
    # This is the working directory for the Go build command(s).
    # Default is `.`.
    dir: .

    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin

    # Binary name.
    # Can be a path (e.g. `bin/app`) to wrap the binary in a directory.
    # Default is the name of the project directory.
    binary: protoc-gen-cobra
archives:

  - id: protoc-gen-cobra-archive
    replacements:
      darwin: Darwin
      linux: Linux
      windows: Windows
      386: i386
      amd64: x86_64
    builds:
      - protoc-gen-cobra

    wrap_in_directory: true
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md

checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'


## We upload the artifacts to S3, and not on the git repos
release:
  github:
    owner: protoc-gen-cobra
    name: protoc-gen-cobra
  ids:
    - protoc-gen-cobra-archive

  # If set to true, will not auto-publish the release.
  # Default is false.
  draft: true

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: auto

  # You can disable this pipe in order to not upload any artifacts.
  # Defaults to false.
  disable: false

  # You can change the name of the release.
  # Default is `{{.Tag}}` on OSS and `{{.PrefixedTag}}` on Pro.
  name_template: "{{.ProjectName}}-v{{.Version}} {{.Env.USER}}"